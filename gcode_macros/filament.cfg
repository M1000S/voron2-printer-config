###############################################################################
## Print Head dimensions
##
##       Clockwork 2
##      -----()()-----    -
##      |            |    
##      |            |    24.8mm
##      |            |    
##      --------------    -
## 
##       Rapido mount
##      --------------    -
##      |            |    7.5mm
##      --------------    -
##
##      Rapido Plus HF
##      --------------    -
##      |            | 
##      |            |
##      |            |    26mm
##      |            |
##      |            |
##      -----    -----    - 
##           |  |         2.5mm
##        ---    ---      -  
##        |        |
##        |        |      20mm
##        |        |
##        ---    ---      - 
##           |  |         5.5mm (-0.6 mm nozzle channel)
##            \/          - 
##
## => Cold zone: 24.8 + 7.5 + 26 = 58.3 mm
##    Heta break:                   2.5 mm
##    Hot zone:  20 + 4.9 =        24.9 mm
## => Total Length: 58.3 + 2.5 + 24.9 = 85.7 mm
###############################################################################


###############################################################################
## UNLOAD FILAMENT
## Config (printer["gcode_macro Voron"])
##  filament_unload_speed: unload speed in mm/s
##  filament_unload_length: unload lenght in mm
##  filament_unload_ramming: retract extraude length for tip forming in mm
##  filament_unload_length_fast: fast retract length in mm
##  filament_unload_purge: purge length before retract in mm
## Parameter
##  TEMP: hotend temperature for unloading filament
[gcode_macro UNLOAD_FILAMENT]
description: Unloads the filament.
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    RESPOND MSG="Heating..."
    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}
  {% set unload_speed  = printer["gcode_macro Voron"].filament_unload_speed|float * 60 %}
  {% set unload_length = printer["gcode_macro Voron"].filament_unload_length|float %}
  {% set unload_ramming = printer["gcode_macro Voron"].filament_unload_ramming|float %}
  {% set unload_length_fast = printer["gcode_macro Voron"].filament_unload_length_fast|float %}
  {% set unload_purge  = printer["gcode_macro Voron"].filament_unload_purge|float %}
  RESPOND MSG="Unloading filament..."
  # Extrude a bit
  G0 E{unload_purge} F300
  # Extract filament to cold end area 
  G0 E-{unload_ramming} F3600
  # Wait for three seconds
  G4 P3000
  # Push back the filament to smash any stringing 
  G0 E{unload_ramming} F3600
  # Extract back fast in to the cold zone 
  G0 E-{unload_length_fast} F3600
  # Continue extraction slowly, allow the filament time to cool solid before it reaches the gears       
  G0 E-{unload_length} F{unload_speed}
  RESPONF MSG="Filament unloaded!"
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  RESTORE_GCODE_STATE NAME=unload_state


###############################################################################
## LOAD FILAMENT
## Config (printer["gcode_macro Voron"])
##  filament_load_speed: load speed in mm/s
##  filament_load_length: load lenght in mm
##  filament_load_purge: load purge length in mm
## Parameter
##  TEMP: hotend temperature for unloading filament
[gcode_macro LOAD_FILAMENT]
description: Loads new filament.
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    RESPOND MSG="Heating..."
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}
  {% set load_speed  = printer["gcode_macro Voron"].filament_load_speed|float * 60 %}
  {% set load_length = printer["gcode_macro Voron"].filament_load_length|float %}
  {% set load_purge  = printer["gcode_macro Voron"].filament_load_purge|float %}
  RESPOND MSG="Loading filament..."
  # Load the filament into the hotend area.
  G0 E{load_length} F{load_speed}
  # Wait a secod
  G4 P1000
  # Purge
  G0 E{load_purge} F100
  # Wait for purge to complete
  M400
  RESPOND MSG="Filament loaded!"
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0  
  RESTORE_GCODE_STATE NAME=load_state


###############################################################################
## <TYPE> LOAD | <TYPE> UNLOAD
## Config (printer["gcode_macro Voron"])
##  filament_change_temp_abs: temperature to load/unload ABS
## Parameter
##  NONE
## Variables
##  printer.save_variables.variables.loaded_filament_type: 
##        Holds the currently loaded filament type or 'NONE'
[gcode_macro ABS_LOAD]
description: Load ABS Filament
gcode:
  {% set temp = printer["gcode_macro Voron"].filament_change_temp_abs|float %}
  SAVE_VARIABLE VARIABLE=loaded_filament_type VALUE='"ABS"'
  LOAD_FILAMENT TEMP={temp}

[gcode_macro ABS_UNLOAD]
description: Unload ABS Filament
gcode:
  {% set temp = printer["gcode_macro Voron"].filament_change_temp_abs|float %}
  SAVE_VARIABLE VARIABLE=loaded_filament_type VALUE='"NONE"'
  UNLOAD_FILAMENT TEMP={temp}

[gcode_macro PETG_LOAD]
description: Load PETG Filament
gcode:
  {% set temp = printer["gcode_macro Voron"].filament_change_temp_petg|float %}
  SAVE_VARIABLE VARIABLE=loaded_filament_type VALUE='"PETG"'
  LOAD_FILAMENT TEMP={temp}

[gcode_macro PETG_UNLOAD]
description: Unload PETG Filament
gcode:
  {% set temp = printer["gcode_macro Voron"].filament_change_temp_petg|float %}
  SAVE_VARIABLE VARIABLE=loaded_filament_type VALUE='"NONE"'
  UNLOAD_FILAMENT TEMP={temp}


###############################################################################
## GET_LOADED_FILAMENT_TYPE
## Config (printer["gcode_macro Voron"])
##  NONE
## Parameter
##  NONE
## Variables
##  printer.save_variables.variables.loaded_filament_type: 
##        Holds the currently loaded filament type or 'NONE'
[gcode_macro GET_LOADED_FILAMENT_TYPE]
description: Prints the currently loaded filamtn type
gcode:
  {% set svv = printer.save_variables.variables %}
  RESPOND MSG={svv.loaded_filament_type}
