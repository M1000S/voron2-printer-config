###############################################################################
# SET_Z_OFFSET_FILAMENT
# Config: 
#  - 
# Parameter:
#  - 
[gcode_macro SET_Z_OFFSET_FILAMENT]
description: Apply filament specific z offset before printing
gcode:
    {% set svv  = printer.save_variables.variables %}
    {% set loc_offset = printer["gcode_macro Voron"].filament.type[svv.loaded_filament_type].z_offset|float %}
    SET_GCODE_OFFSET Z=0.0 MOVE=1
    SET_GCODE_OFFSET Z={loc_offset} MOVE=1

###############################################################################
# RESET_Z_OFFSET_FILAMENT
# Config: 
#  - 
# Parameter:
#  - 
[gcode_macro RESET_Z_OFFSET_FILAMENT]
description: Reset filament specific z offset before printing
gcode:
    {% set svv  = printer.save_variables.variables %}
    {% set loc_offset = printer["gcode_macro Voron"].filament.type[svv.loaded_filament_type].z_offset|float %}
    
    SET_GCODE_OFFSET Z=0.0 MOVE=1

###############################################################################
## LOAD | UNLOAD
## Config (printer["gcode_macro Voron"])
##  filament_change_temp_abs: temperature to load/unload ABS
## Parameter
##  NONE
## Variables
##  printer.save_variables.variables.loaded_filament_type: 
##        Holds the currently loaded filament type or 'NONE'
[gcode_macro LOAD_ABS]
description: Load ABS Filament
gcode:
  {% set loc_temp = printer["gcode_macro Voron"].filament.type['ABS'].extruder|float %}
  status_loading  
  SAVE_VARIABLE VARIABLE=loaded_filament_type VALUE='"ABS"'
  RESPOND PREFIX="LOAD FILAMENT: Loading ABSG@{loc_temp}°C"
  _LOAD_FILAMENT TEMP={loc_temp}
  status_restore

[gcode_macro LOAD_PETG]
description: Load PETG Filament
gcode:
  
  {% set loc_temp = printer["gcode_macro Voron"].filament.type['PETG'].extruder|float %}
  status_loading
  SAVE_VARIABLE VARIABLE=loaded_filament_type VALUE='"PETG"'
  RESPOND PREFIX="LOAD FILAMENT: Loading PETG@{loc_temp}°C"
  _LOAD_FILAMENT TEMP={loc_temp}
  status_restore

[gcode_macro UNLOAD]
description: Unload current Filament
gcode:
  {% set svv  = printer.save_variables.variables %}
  {% set loc_temp = printer["gcode_macro Voron"].filament.type[svv.loaded_filament_type].extruder %}
  status_loading  
  SAVE_VARIABLE VARIABLE=loaded_filament_type VALUE='"NONE"'
  RESPOND PREFIX="UNLOAD FILAMENT:" MSG="Unloading {svv.loaded_filament_type}@{loc_temp}°C"
  _UNLOAD_FILAMENT TEMP={loc_temp}
  status_restore

###############################################################################
## FILAMENT_INFO
## Config (printer["gcode_macro Voron"])
##  NONE
## Parameter
##  NONE
## Variables
##  printer.save_variables.variables.loaded_filament_type: 
##        Holds the currently loaded filament type or 'NONE'
[gcode_macro FILAMENT_INFO]
description: Prints the currently loaded filament type
gcode:
  {% set svv = printer.save_variables.variables %}
  RESPOND PREFIX="FILAMENT INFO:" MSG="Loaded {svv.loaded_filament_type}"
  {% if svv.loaded_filament_type|lower != 'none' %}
    RESPOND PREFIX="FILAMENT INFO:" MSG="Load temperature = {printer['gcode_macro Voron'].filament.type[svv.loaded_filament_type].extruder}°C"
  {% endif %}
  #RESPOND PREFIX="FILAMENT_INFO:" MSG={printer["gcode_macro Voron"].filament.type['ABS'].extruder|float}
  #RESPOND MSG={"Unloading " + svv.loaded_filament_type + " filament started"}
  #RESPOND MSG="Unloading {svv.loaded_filament_type} started"


###############################################################################
## Print Head dimensions
##
##       Clockwork 2
##      -----()()-----    -
##      |            |    
##      |            |    24.8mm
##      |            |    
##      --------------    -
## 
##       Rapido mount
##      --------------    -
##      |            |    7.5mm
##      --------------    -
##
##      Rapido Plus HF
##      --------------    -
##      |            | 
##      |            |
##      |            |    26mm
##      |            |
##      |            |
##      -----    -----    - 
##           |  |         2.5mm
##        ---    ---      -  
##        |        |
##        |        |      20mm
##        |        |
##        ---    ---      - 
##           |  |         5.5mm (-0.6 mm nozzle channel)
##            \/          - 
##
## => Cold zone: 24.8 + 7.5 + 26 = 58.3 mm
##    Heta break:                   2.5 mm
##    Hot zone:  20 + 4.9 =        24.9 mm
## => Total Length: 58.3 + 2.5 + 24.9 = 85.7 mm
###############################################################################


###############################################################################
## UNLOAD FILAMENT
## Config (printer["gcode_macro Voron"])
##  filament_unload_speed: unload speed in mm/s
##  filament_unload_length: unload lenght in mm
##  filament_unload_ramming: retract extraude length for tip forming in mm
##  filament_unload_length_fast: fast retract length in mm
##  filament_unload_purge: purge length before retract in mm
## Parameter
##  TEMP: hotend temperature for unloading filament
[gcode_macro _UNLOAD_FILAMENT]
description: Unloads the filament.
gcode:
  # Save gcode state
  SAVE_GCODE_STATE NAME=unload_state
  # Incremental positioning 
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    {% set loc_temp = params.TEMP|default(220, true) %}
    # Inform user
    RESPOND PREFIX="UNLOAD FILAMENT:" MSG="Heating to {loc_temp}°C"
    # set target temperature
    M104 S{loc_temp}
    # wait for target temperature reached
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}
  # Get length and speed configuration from Voron macro
  {% set loc_unload_speed  = printer["gcode_macro Voron"].filament.unload.speed|float * 60 %}
  {% set loc_unload_length = printer["gcode_macro Voron"].filament.unload.length|float %}
  {% set loc_unload_ramming = printer["gcode_macro Voron"].filament.unload.ramming|float %}
  {% set loc_unload_length_fast = printer["gcode_macro Voron"].filament.unload.length_fast|float %}
  {% set loc_unload_purge  = printer["gcode_macro Voron"].filament.unload.purge|float %}
  # Inform user
  RESPOND PREFIX="UNLOAD FILAMENT:" MSG="Unloading filament..."
  # Extrude a bit
  G0 E{loc_unload_purge} F300
  # Extract filament to cold end area 
  G0 E-{loc_unload_ramming} F3600
  # Wait for three seconds
  G4 P3000
  # Push back the filament to smash any stringing 
  G0 E{loc_unload_ramming} F3600
  # Extract back fast in to the cold zone 
  G0 E-{loc_unload_length_fast} F3600
  # Continue extraction slowly, allow the filament time to cool solid before it reaches the gears       
  G0 E-{loc_unload_length} F{loc_unload_speed}
  # Inform user
  RESPOND PREFIX="UNLOAD FILAMENT:" MSG="Filament unloaded!"
  # Cool down
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  # Restore gcode state
  RESTORE_GCODE_STATE NAME=unload_state


###############################################################################
## LOAD FILAMENT
## Config (printer["gcode_macro Voron"])
##  filament_load_speed: load speed in mm/s
##  filament_load_length: load lenght in mm
##  filament_load_purge: load purge length in mm
## Parameter
##  TEMP: hotend temperature for unloading filament
[gcode_macro _LOAD_FILAMENT]
description: Loads new filament.
gcode:
  # Save gcode state
  SAVE_GCODE_STATE NAME=load_state
  # Incremental positioning
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or printer.extruder.can_extrude|lower == 'false' %}
    {% set loc_temp = params.TEMP|default(220, true) %}
    # Inform user
    RESPOND PREFIX="LOAD FILAMENT:" MSG="Heating to {loc_temp}°C"
    # set target temperature
    M104 S{loc_temp}
    # wait for target temperature reached
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}
  # Get length and speed configuration from Voron macro
  {% set load_speed  = printer["gcode_macro Voron"].filament.load.speed|float * 60 %}
  {% set load_length = printer["gcode_macro Voron"].filament.load.length|float %}
  {% set load_purge  = printer["gcode_macro Voron"].filament.load.purge|float %}
  # Inform user
  RESPOND PREFIX="LOAD FILAMENT:" MSG="Loading filament..."
  # Load the filament into the hotend area.
  G0 E{load_length} F{load_speed}
  # Wait a secod
  G4 P1000
  # Purge
  G0 E{load_purge} F100
  # Wait for purge to complete
  M400
  # Inform user
  RESPOND PREFIX="LOAD FILAMENT:" MSG="Filament loaded!"
  # Cool down
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  # Restore gcode state  
  RESTORE_GCODE_STATE NAME=load_state
